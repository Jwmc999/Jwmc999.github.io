I"(<h1 id="topics">Topics</h1>
<h3 id="fundamental-data-structures">Fundamental data structures</h3>
<ul>
  <li>Array, list, stack, queue, heap, tree, and graph</li>
  <li>Graph traversal algorithms: DFS and BFS
    <h3 id="algorithm-analysis">Algorithm analysis</h3>
  </li>
  <li>Asymptotic notations and analysis</li>
  <li>Time and space complexities
    <h3 id="fundamental-algorithms">Fundamental algorithms:</h3>
  </li>
  <li>Sorting</li>
  <li>Shortest path</li>
  <li>Minimum spanning tree</li>
  <li>Topological sort</li>
  <li>Dynamic programming
    <h2 id="stack-and-queue">Stack and Queue</h2>
  </li>
  <li>Stack</li>
  <li>Queue
    <h2 id="tree-and-graph">Tree and Graph</h2>
  </li>
  <li>Tree</li>
  <li>Graph
    <h2 id="algorithm-analysis-1">Algorithm Analysis</h2>
    <h3 id="suppose-that-we-have-two-algorithms">Suppose that we have two algorithms.</h3>
    <p>As a computer scientist, how can you tell which is better?</p>
  </li>
  <li>Insertion sort vs merge sort</li>
  <li>Merge sort vs quicksort
    <h3 id="asymptotic-algorithm-analysis-to-evaluate-solutions">(Asymptotic) Algorithm analysis to evaluate solutions</h3>
  </li>
  <li>Time/space complexities</li>
  <li>Weak ordering
    <h4 id="shortest-path">Shortest Path</h4>
  </li>
  <li>A path between two nodes in a graph such that the sum of weights of its constituent edges is minimized.
    <h4 id="minimum-spanning-tree">Minimum Spanning Tree</h4>
    <h4 id="topological-sort-and-critical-path">Topological Sort and Critical Path</h4>
    <h4 id="dynamic-programming">Dynamic Programming</h4>
    <h4 id="interval-scheduling">Interval scheduling</h4>
  </li>
  <li>A largest set of non-overlapping intervals
    <h4 id="edit-distance">Edit distance</h4>
    <h4 id="matrix-chain-multiplication">Matrix chain multiplication</h4>
  </li>
</ul>
:ET