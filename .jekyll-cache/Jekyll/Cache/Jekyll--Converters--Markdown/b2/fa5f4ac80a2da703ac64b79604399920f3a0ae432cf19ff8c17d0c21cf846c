I"¬<h1 id="graph">Graph</h1>
<ul>
  <li>A graph is a data type for storing adjacency relations.
    <ul>
      <li>Objects: a finite set of nodes (or vertices)</li>
      <li>Relationships: a finite set of edges (or arcs, links)
        <h4 id="examples">Examples</h4>
      </li>
    </ul>
  </li>
  <li>Computer networks, Road networks, Circuits, CS curriculum
    <h2 id="undirected-graphs">Undirected Graphs</h2>
  </li>
  <li>We define an <em><strong>undirected graph</strong></em> as a collection of vertices
\(V = \left \{ v_{1}, v_{2}, ..., v_{n} \right \}\)
    <ul>
      <li>
        <table>
          <tbody>
            <tr>
              <td>The number of vertices is denoted by $</td>
              <td>V</td>
              <td>= n$</td>
            </tr>
          </tbody>
        </table>
      </li>
      <li>Associated with this is a collection E of unordered pairs ${ v_{i}, v_{j}}$ termed edges which connect the vertices</li>
    </ul>
  </li>
  <li>There are a number of data structures that can be used to implement graphs
    <ul>
      <li>Adjacency matrices</li>
      <li>Adjacency lists</li>
    </ul>
  </li>
  <li>We will assume in this course that a vertex is never adjacent to itself
    <ul>
      <li>For example, ${ v_{1}, v_{2}}$ will not define an edge</li>
    </ul>
  </li>
  <li>The maximum number of edges in an undirected graph is
\(\left | E \right |\leq \binom{\left | V \right |}{2}= \frac{\left | V \right |\left ( \left | V \right |-1 \right )}{2}=O\left ( \left | V \right |^{2} \right )\)
    <h4 id="example-01">Example 01</h4>
  </li>
  <li>Consider this collection of vertices
\(V = \left \{ v_{1}, v_{2}, ..., v_{9} \right \}\)
where $|V| = 9$</li>
</ul>
:ET